<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Frank Braun</title>
    <link>http://frankbraun.org/tags/go/</link>
    <description>Recent content in Go on Frank Braun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>frank@cryptogroup.net (Frank Braun)</managingEditor>
    <webMaster>frank@cryptogroup.net (Frank Braun)</webMaster>
    <lastBuildDate>Wed, 10 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://frankbraun.org/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rob Pike</title>
      <link>http://frankbraun.org/quote/rob-pike/</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      <author>frank@cryptogroup.net (Frank Braun)</author>
      <guid>http://frankbraun.org/quote/rob-pike/</guid>
      <description>&lt;blockquote  &gt;
  
&lt;p&gt;
What you&#39;re given is a set of powerful but easy to understand,
easy to use building blocks from which you can assemble—compose—a solution to
your problem. It might not end up quite as fast or as sophisticated or as
ideologically motivated as the solution you&#39;d write in some of those other
languages, but it&#39;ll almost certainly be easier to write, easier to read, easier
to understand, easier to maintain, and maybe safer.
&lt;/p&gt;

  
    &lt;cite&gt;Rob Pike on the Go Programming language, 2012&lt;/cite&gt;
  
&lt;/blockquote&gt;


&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go libraries</title>
      <link>http://frankbraun.org/note/go-libs/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      <author>frank@cryptogroup.net (Frank Braun)</author>
      <guid>http://frankbraun.org/note/go-libs/</guid>
      <description>&lt;p&gt;Collection of recommended Go libraries.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>